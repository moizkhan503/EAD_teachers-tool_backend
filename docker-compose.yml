version: '3.8'

services:
  app:
    build: .
    restart: always
    ports:
      - "8000:8000"
    environment:
      - ENV=production
      - DEBUG=false
      - QDRANT_URL=http://qdrant:6333
      - GROQ_API_KEY=${GROQ_API_KEY}
      - QDRANT_API_KEY=${QDRANT_API_KEY:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - LOG_LEVEL=INFO
    depends_on:
      - qdrant
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G

  qdrant:
    image: qdrant/qdrant:v1.8.0
    restart: always
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:6333/readyz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Uncomment and configure if you want to add a database
  # db:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_USER: ${DB_USER:-postgres}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
  #     POSTGRES_DB: ${DB_NAME:-appdb}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5

volumes:
  qdrant_data:
  # postgres_data:
